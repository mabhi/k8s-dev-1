apiVersion: v1
kind: ServiceAccount
metadata:
  name: read-ingress-sa
  namespace: ingress-read
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: ingress-read
  name: ingress-reader
rules:
- apiGroups: ["networking.k8s.io"] # "" indicates the core API group
  resources: ["ingresses","ingresses/status", "networkpolicies"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: read-ingress
  namespace: ingress-read
subjects:
- namespace: ingress-read 
  kind: ServiceAccount
  name: read-ingress-sa
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: ingress-reader # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: ingress-lister-dep
  name: ingress-lister-dep
  namespace: ingress-read
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-lister
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ingress-lister
    spec:
      serviceAccountName: read-ingress-sa
      containers:
      - image: mabhi2ic/lister:v0.1.1
        name: ingress-lister
        resources: {}
status: {}
---